services:
  postgres:
    image: postgres:16-alpine
    container_name: anb_postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: anb_user
      POSTGRES_PASSWORD: anb_pass
      POSTGRES_DB: anb_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - anb_network

  rabbitmq:
    image: rabbitmq:3.12-management-alpine
    container_name: anb_rabbitmq
    restart: unless-stopped
    environment:
      RABBITMQ_DEFAULT_USER: anb_user
      RABBITMQ_DEFAULT_PASS: anb_pass
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - anb_network

  redis:
    image: redis:7-alpine
    container_name: anb_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - anb_network

  app:
    image: anb_app:latest
    container_name: anb_app
    restart: unless-stopped
    environment:
      DATABASE_URL: postgresql+asyncpg://anb_user:anb_pass@postgres:5432/anb_db
      CELERY_BROKER_URL: amqp://anb_user:anb_pass@rabbitmq:5672//
      CELERY_RESULT_BACKEND: redis://redis:6379/0
      SECRET_KEY: mi-clave-secreta-para-jwt
      ACCESS_TOKEN_EXPIRE_MINUTES: "30"
    volumes:
      - ./storage:/app/storage
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - rabbitmq
      - redis
    networks:
      - anb_network

  celery_worker:
    image: anb_app:latest
    container_name: anb_celery
    restart: unless-stopped
    command: celery -A app.core.celery_app worker --loglevel=info
    environment:
      DATABASE_URL: postgresql+asyncpg://anb_user:anb_pass@postgres:5432/anb_db
      CELERY_BROKER_URL: amqp://anb_user:anb_pass@rabbitmq:5672//
      CELERY_RESULT_BACKEND: redis://redis:6379/0
    volumes:
      - ./storage:/app/storage
    depends_on:
      - postgres
      - rabbitmq
      - redis
    networks:
      - anb_network

  nginx:
    image: nginx:alpine
    container_name: anb_nginx
    restart: unless-stopped
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./storage:/app/storage:ro
    ports:
      - "80:80"
    depends_on:
      - app
    networks:
      - anb_network

volumes:
  postgres_data:
    driver: local

networks:
  anb_network:
    driver: bridge