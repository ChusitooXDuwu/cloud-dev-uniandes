{
	"info": {
		"_postman_id": "anb-rising-stars-api",
		"name": "ANB Rising Stars API",
		"description": "Complete API collection for ANB Rising Stars Showcase",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Signup",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Response has user_id\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('user_id');",
									"    pm.environment.set('user_id', jsonData.user_id);",
									"});",
									"",
									"pm.test(\"Response has success message\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.message).to.include('successfully');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"first_name\": \"John\",\n  \"last_name\": \"Doe\",\n  \"email\": \"john.doe{{$timestamp}}@example.com\",\n  \"password1\": \"SecurePass123\",\n  \"password2\": \"SecurePass123\",\n  \"city\": \"Bogot\u00e1\",\n  \"country\": \"Colombia\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/auth/signup",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"signup"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has access_token\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('access_token');",
									"    pm.environment.set('access_token', jsonData.access_token);",
									"    pm.environment.set('user_id', jsonData.access_token);",
									"});",
									"",
									"pm.test(\"Response has token_type bearer\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('token_type');",
									"    pm.expect(jsonData.token_type).to.equal('bearer');",
									"});",
									"",
									"pm.test(\"Response has expires_in\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('expires_in');",
									"    pm.expect(jsonData.expires_in).to.be.a('number');",
									"    pm.expect(jsonData.expires_in).to.be.above(0);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"john.doe@example.com\",\n  \"password\": \"SecurePass123\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/auth/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Videos",
			"item": [
				{
					"name": "Upload Video",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Response has task_id\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('task_id');",
									"    pm.environment.set('task_id', jsonData.task_id);",
									"    pm.environment.set('video_id', jsonData.task_id);",
									"});",
									"",
									"pm.test(\"Response has success message\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.message).to.include('successfully');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "video_file",
									"type": "file",
									"src": "tests/test_data/flex.mp4",
									"description": "Select an MP4 video file (20-65s, min 720p, max 100MB)"
								},
								{
									"key": "title",
									"value": "My Amazing Basketball Skills",
									"type": "text"
								},
								{
									"key": "user_id",
									"value": "{{user_id}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/videos/upload",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"videos",
								"upload"
							]
						}
					},
					"response": []
				},
				{
					"name": "List My Videos",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response is an array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.be.an('array');",
									"});",
									"",
									"pm.test(\"Videos have required fields\", function () {",
									"    var jsonData = pm.response.json();",
									"    if (jsonData.length > 0) {",
									"        pm.expect(jsonData[0]).to.have.property('video_id');",
									"        pm.expect(jsonData[0]).to.have.property('title');",
									"        pm.expect(jsonData[0]).to.have.property('status');",
									"    }",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/videos?user_id={{user_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"videos"
							],
							"query": [
								{
									"key": "user_id",
									"value": "{{user_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Video Detail",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has video details\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('video_id');",
									"    pm.expect(jsonData).to.have.property('title');",
									"    pm.expect(jsonData).to.have.property('votes');",
									"    pm.expect(jsonData).to.have.property('duration_seconds');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/videos/{{video_id}}?user_id={{user_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"videos",
								"{{video_id}}"
							],
							"query": [
								{
									"key": "user_id",
									"value": "{{user_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Publish Video",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response confirms publication\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.message).to.include('published');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{base_url}}/videos/{{video_id}}/publish?user_id={{user_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"videos",
								"{{video_id}}",
								"publish"
							],
							"query": [
								{
									"key": "user_id",
									"value": "{{user_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Vote for Video",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response confirms vote\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.message.toLowerCase()).to.include('vote');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"user_id\": \"{{user_id}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/public/videos/{{video_id}}/vote",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"public",
								"videos",
								"{{video_id}}",
								"vote"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Video",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 or 400 (public videos cannot be deleted)\", function () {",
									"    pm.expect([200, 400]).to.include(pm.response.code);",
									"});",
									"",
									"pm.test(\"Response has appropriate message\", function () {",
									"    var jsonData = pm.response.json();",
									"    if (pm.response.code === 200) {",
									"        pm.expect(jsonData.message.toLowerCase()).to.include('deleted');",
									"    } else if (pm.response.code === 400) {",
									"        pm.expect(jsonData.detail.toLowerCase()).to.include('public');",
									"    }",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/videos/{{video_id}}?user_id={{user_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"videos",
								"{{video_id}}"
							],
							"query": [
								{
									"key": "user_id",
									"value": "{{user_id}}"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Public",
			"item": [
				{
					"name": "List Public Videos",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response is an array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.be.an('array');",
									"});",
									"",
									"pm.test(\"Public videos have required fields\", function () {",
									"    var jsonData = pm.response.json();",
									"    if (jsonData.length > 0) {",
									"        pm.expect(jsonData[0]).to.have.property('video_id');",
									"        pm.expect(jsonData[0]).to.have.property('title');",
									"        pm.expect(jsonData[0]).to.have.property('processed_url');",
									"        pm.expect(jsonData[0]).to.have.property('username');",
									"        pm.expect(jsonData[0]).to.have.property('city');",
									"        pm.expect(jsonData[0]).to.have.property('votes');",
									"    }",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/public/videos?limit=20&offset=0",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"public",
								"videos"
							],
							"query": [
								{
									"key": "limit",
									"value": "20"
								},
								{
									"key": "offset",
									"value": "0"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Rankings",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response is an array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.be.an('array');",
									"});",
									"",
									"pm.test(\"Rankings have required fields\", function () {",
									"    var jsonData = pm.response.json();",
									"    if (jsonData.length > 0) {",
									"        pm.expect(jsonData[0]).to.have.property('position');",
									"        pm.expect(jsonData[0]).to.have.property('username');",
									"        pm.expect(jsonData[0]).to.have.property('city');",
									"        pm.expect(jsonData[0]).to.have.property('votes');",
									"    }",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/public/rankings?limit=20&offset=0",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"public",
								"rankings"
							],
							"query": [
								{
									"key": "city",
									"value": "Bogot\u00e1",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "20"
								},
								{
									"key": "offset",
									"value": "0"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Rankings by City",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"All results are from specified city\", function () {",
									"    var jsonData = pm.response.json();",
									"    if (jsonData.length > 0) {",
									"        jsonData.forEach(function(item) {",
									"            pm.expect(item.city).to.equal('Bogot\u00e1');",
									"        });",
									"    }",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/public/rankings?city=Bogot\u00e1&limit=20&offset=0",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"public",
								"rankings"
							],
							"query": [
								{
									"key": "city",
									"value": "Bogot\u00e1"
								},
								{
									"key": "limit",
									"value": "20"
								},
								{
									"key": "offset",
									"value": "0"
								}
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:8000/api"
		},
		{
			"key": "user_id",
			"value": ""
		},
		{
			"key": "access_token",
			"value": ""
		},
		{
			"key": "task_id",
			"value": ""
		},
		{
			"key": "video_id",
			"value": ""
		}
	]
}