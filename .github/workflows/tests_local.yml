name: Tests Unitarios y Cobertura

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  test:
    runs-on: ubuntu-latest
    name: Ejecutar Tests Unitarios - ANB Rising Stars API
    
    # Variables de entorno para los tests
    env:
      # Base de datos de test
      DATABASE_URL: postgresql+asyncpg://anb_user:anb_pass@localhost:5432/anb_db_test
      
      # Configuración de almacenamiento
      STORAGE_PATH: ./storage
      MAX_FILE_SIZE_MB: 100
      
      # Configuración de la aplicación
      APP_NAME: ANB Rising Stars API
      APP_VERSION: 1.0.0
      ENVIRONMENT: testing
    
    # Servicio PostgreSQL para tests
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: anb_user
          POSTGRES_PASSWORD: anb_pass
          POSTGRES_DB: anb_db_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
      - name: Checkout código
        uses: actions/checkout@v4
      
      - name: Configurar Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: 3.11
      
      - name: Instalar FFmpeg
        run: |
          sudo apt-get update
          sudo apt-get install -y ffmpeg
          ffmpeg -version
      
      - name: Cache de dependencias de Python
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      
      - name: Instalar dependencias
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov
      
      - name: Crear directorios de storage
        run: |
          mkdir -p storage/uploads
          mkdir -p storage/processed
          mkdir -p storage/temp
      
      - name: Esperar a que PostgreSQL esté listo
        run: |
          until pg_isready -h localhost -p 5432 -U anb_user; do
            echo "Esperando a PostgreSQL..."
            sleep 2
          done
          echo "PostgreSQL está listo"
      
      - name: Ejecutar migraciones de Alembic
        run: |
          alembic upgrade head
      
      - name: Ejecutar tests con cobertura
        run: |
          pytest --cov=app --cov-report=term-missing --cov-report=xml --cov-fail-under=70 -v
